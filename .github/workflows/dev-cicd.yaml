name: CI and CD for Dev
on:
  push:
    branches: ['dev']
jobs:
  build-and-push-image:
        environment: dev
        name: Build Image and Push to Registry
        runs-on:  ubuntu-latest
        permissions:
          contents: read
          packages: write
          attestations: write
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4
          - name: Setup SHA
            run: echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          - name: Registry name
            run: echo "registry is ${{ vars.REGISTRY }} ENV is ${{ vars.ENV_VARIABLE }}"
          - name: Log in to the Container registry
            uses: docker/login-action@v3.1.0
            with:
              registry: ${{ vars.REGISTRY }}
              username: ${{ github.actor }}
              password: ${{ secrets.GITHUB_TOKEN }}
          - name: Build and push Docker image
            id: push
            uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
            with:
              context: .
              push: true
              tags: ${{ vars.REGISTRY }}/${{ github.repository }}:${{ env.GITHUB_SHA }}
          - name: Image digest
            run: echo ${{ steps.docker_build.outputs.digest }}
  gitops-dev-versioning:
        runs-on: ubuntu-latest
        needs: build-and-push-image
        name: GitOps Dev Versioning
        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: config git
              run: |
                git --version
                git config user.name "robot"
                git config user.email "robot@email.com"
            - name: change image tag to deploy dev
              run: |
                sed -i -E "s/${{ vars.REGISTRY }}\/${{ github.repository }}.*$/${{ vars.REGISTRY }}\/${{ github.repository }}:${GITHUB_SHA}/" infra/gitops/dev/deployment.yaml
                git add infra/gitops/dev/deployment.yaml
                git commit -m "[skip actions] ðŸ¤– change dev docker image version to ${GITHUB_SHA}"
                git pull --rebase
                git push